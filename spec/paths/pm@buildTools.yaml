parameters:
  - name: orgId
    in: query
    description: org Id
    required: true
    schema:
      type: integer
get:
  security:
    - ApiKeyAuth: []
    - ApiRootKeyAuth: []
  tags:
    - ProjectManager
  summary: 构建工具列表
  responses:
    '200':
      description: 获取成功
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BuildToolListResponse'
          example:
            - name: golang
              version: 1.9
              desc: golang:1.11
              binPath: /go/bin
              enabled: true
              scripts: |
                curl -fsSL http://spock-resources.qbox.net/go1.9.linux-amd64.tar.gz  -o /tmp/golang.tar.gz
                tar -C $HOME -xzf /tmp/golang.tar.gz
              updated: 2019-01-01T12:30:00.000Z
              updatedBy: me
            - name: golang
              version: 1.11
              desc: golang:1.11
              binPath: /go/bin
              enabled: true
              scripts: |
                curl -fsSL http://spock-resources.qbox.net/go1.11.linux-amd64.tar.gz  -o /tmp/golang.tar.gz
                tar -C $HOME -xzf /tmp/golang.tar.gz
              updated: 2019-02-01T12:30:00.000Z
              updatedBy: me
post:
  security:
    - ApiKeyAuth: []
    - ApiRootKeyAuth: []
  tags:
    - ProjectManager
  summary: 添加构建工具
  description: 如果存在相同名称和版本号的工具，则覆盖配置
  requestBody:
    description: 添加构建工具请求
    content:
      application/json:
        schema:
          $ref: "#/components/schemas/BuildTool"
        example:
          name: golang
          version: 1.11
          desc: golang:1.11
          binPath: /go/bin
          enabled: true
          scripts: |
            curl -fsSL http://spock-resources.qbox.net/go1.11.linux-amd64.tar.gz  -o /tmp/golang.tar.gz\n
            tar -C $HOME -xzf /tmp/golang.tar.gz
  responses:
    '200':
      description: 添加成功
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionResult'